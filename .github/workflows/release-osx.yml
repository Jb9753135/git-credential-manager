name: osx-release

on:
  workflow_dispatch:
  push:
    branches: [ main, release, migrate-release-workflows ]

jobs:
  build-and-lay-out:
    name: Build and lay out macOS payload
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Indicate full history so Nerdbank.GitVersioning works.
        ref: migrate-release-workflows

    - name: Set up dotnet
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.201
    
    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: |
        dotnet build --configuration=MacRelease
    
    - name: Run macOS unit tests
      run: |
        dotnet test --configuration=MacRelease

    - name: Lay out payload and symbols
      run: |
        src/osx/Installer.Mac/layout.sh --configuration=MacRelease --output=out/osx/payload --symbol-output=out/osx/symbols
    
    - name: Zip payload to prepare for signing
      shell: pwsh
      run: |
        Compress-Archive -Path out/osx/payload .\payload.zip

    - name: Upload payload
      uses: actions/upload-artifact@v2
      with:
        name: macos-payload
        path: ./payload.zip
    
    - name: Upload symbols
      uses: actions/upload-artifact@v2
      with:
        name: macos-symbols
        path: out/osx/symbols
  
  sign-payload:
    name: Sign macOS payload
    needs: build-and-lay-out
    uses: ./.github/workflows/run-esrp.yml
    with:
      artifactName: macos-payload
      fileToSign: payload.zip
      params: "Hardening, --options=runtime"
    secrets:
      azureCredentials: ${{ secrets.AZURE_CREDENTIALS }}
      azureStorageKey: ${{ secrets.AZURE_STORAGE_KEY }}
      azureVault: ${{ secrets.AZURE_VAULT }}
      authCert: ${{ secrets.AZURE_VAULT_AUTH_CERT_NAME }}
      requestSigningCert: ${{ secrets.AZURE_VAULT_REQUEST_SIGNING_CERT_NAME }}
      azureAadId: ${{ secrets.AZURE_AAD_ID }}
      azureAadIdTemp: ${{ secrets.AAD_ID_TEMP }}
      keyCode: ${{ secrets.APPLE_KEY_CODE }}
      operationCode: ${{ secrets.APPLE_OPERATION_CODE }}
  
  pack:
    name: Package macOS payload
    runs-on: macos-latest
    needs: sign-payload
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Indicate full history so Nerdbank.GitVersioning works.
        ref: migrate-release-workflows
    
    - name: Set up dotnet
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.201
    
    # Install Nerdbank.GitVersioning
    - uses: dotnet/nbgv@master
      with:
        setCommonVars: true

    - name: Download signed payload
      uses: actions/download-artifact@v2
      with:
        name: macos-signed-payload
        path: payload
    
    - name: Unzip signed payload
      shell: pwsh
      run: |
        Expand-Archive -Path payload/payload.zip -DestinationPath payload
        Remove-Item payload/payload.zip
    
    - name: Create component package
      run: |
        src/osx/Installer.Mac/pack.sh --payload=payload --version=$GitBuildVersion --output=components/com.microsoft.gitcredentialmanager.component.pkg
    
    - name: Create product archive
      run: |
        src/osx/Installer.Mac/dist.sh --package-path=components --version=$GitBuildVersion --output=pkg/gcm-osx-$GitBuildVersion.pkg || exit 1
    
    - name: Zip package to prepare for signing
      shell: pwsh
      run: |
        Compress-Archive -Path ./gcm-osx-$GitBuildVersion.pkg ./gcm-osx-$GitBuildVersion.zip

    - name: Upload package
      uses: actions/upload-artifact@v2
      with:
        name: macos-pkg
        path: |
          ./gcm-osx-$GitBuildVersion.zip
  
  sign-package:
    name: Sign macOS package
    needs: pack
    uses: ./.github/workflows/run-esrp.yml
    with:
      artifactName: macos-pkg
      fileToSign: gcm-osx-$GitBuildVersion.zip
    secrets:
      azureCredentials: ${{ secrets.AZURE_CREDENTIALS }}
      azureStorageKey: ${{ secrets.AZURE_STORAGE_KEY }}
      azureVault: ${{ secrets.AZURE_VAULT }}
      authCert: ${{ secrets.AZURE_VAULT_AUTH_CERT_NAME }}
      requestSigningCert: ${{ secrets.AZURE_VAULT_REQUEST_SIGNING_CERT_NAME }}
      azureAadId: ${{ secrets.AZURE_AAD_ID }}
      azureAadIdTemp: ${{ secrets.AAD_ID_TEMP }}
      keyCode: ${{ secrets.APPLE_KEY_CODE }}
      operationCode: ${{ secrets.APPLE_OPERATION_CODE }}
  
  notarize-and-publish-signed-artifacts:
    name: Notarize and publish signed macOS artifacts
    runs-on: macos-latest
    needs: sign-package
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Indicate full history so Nerdbank.GitVersioning works.
        ref: migrate-release-workflows
    
    # Install Nerdbank.GitVersioning
    - uses: dotnet/nbgv@master
      with:
        setCommonVars: true

    - name: Download signed package file
      uses: actions/download-artifact@v2
      with:
        name: macos-pkg-signed
        path: pkg
    
    - name: Download signed payload
      uses: actions/download-artifact@v2
      with:
        name: macos-payload-signed
        path: payload
    
    - name: Download symbols
      uses: actions/download-artifact@v2
      with:
        name: macos-symbols
        path: symbols
    
    - name: Unzip payload and package files
      shell: pwsh
      run: |
        Expand-Archive -Path payload/payload.zip -DestinationPath payload
        Expand-Archive -Path pkg/gcm-osx-$GitBuildVersion.zip -DestinationPath pkg
        Remove-Item payload/payload.zip, pkg/gcm-osx-$GitBuildVersion.zip
    
    - name: Notarize and staple installer package
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
      run: |
        src/osx/SignFiles.Mac/notarize-pkg.sh -id $APPLE_ID -p $APPLE_ID_PASSWORD -pkg pkg/*.pkg
    
    - name: Prepare final artifacts
      run: |
        mkdir -p ./publish/payload ./publish/payload.sym
        cp -f ./pkg/*.pkg ./publish/
        cp -Rf ./payload/ ./publish/payload/
        cp -Rf ./symbols/ ./publish/payload.sym/
        tar -czf ./publish/gcm-osx-$GitBuildVersion.tar.gz ./payload/
        tar -czf ./publish/symbols-osx.tar.gz ./symbols/
    
    - name: Publish final artifacts
      uses: actions/upload-artifact@v2
      with:
        name: macos-signed-installer
        path: ./publish/*