name: release

on:
  workflow_dispatch:
  push:
    branches: [ release ]

jobs:
# ================================
#              macOS
# ================================
  build-lay-out-codesign:
    name: Build, lay out, and codesign macOS payload
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Indicate full history so Nerdbank.GitVersioning works.

    - name: Set up dotnet
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.201
    
    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: |
        dotnet build --configuration=MacRelease
    
    - name: Run macOS unit tests
      run: |
        dotnet test --configuration=MacRelease

    - name: Lay out payload and symbols
      run: |
        src/osx/Installer.Mac/layout.sh --configuration=MacRelease --output=payload --symbol-output=symbols

    - name: Create keychain
      env:
        CERT_BASE64: ${{ secrets.DEVELOPER_CERTIFICATE_BASE64 }}
        CERT_PASSPHRASE: ${{ secrets.DEVELOPER_CERTIFICATE_PASSWORD }}
      run: |
        security create-keychain -p pwd $RUNNER_TEMP/buildagent.keychain
        security default-keychain -s $RUNNER_TEMP/buildagent.keychain
        security unlock-keychain -p pwd $RUNNER_TEMP/buildagent.keychain
        echo $CERT_BASE64 | base64 -D > $RUNNER_TEMP/cert.p12
        security import $RUNNER_TEMP/cert.p12 -k $RUNNER_TEMP/buildagent.keychain -P $CERT_PASSPHRASE -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k pwd $RUNNER_TEMP/buildagent.keychain
    
    - name: Run codesign
      run: |
        .github/run_macos_signing.sh payload U97A56Q9MW $GITHUB_WORKSPACE/src/osx/Installer.Mac/entitlements.xml

    - name: Upload payload
      uses: actions/upload-artifact@v2
      with:
        name: macos-payload
        path: payload
    
    - name: Upload symbols
      uses: actions/upload-artifact@v2
      with:
        name: macos-symbols
        path: symbols
  
  sign-payload:
    name: Sign macOS payload
    # ESRP service requires signing to run on Windows
    runs-on: windows-latest
    needs: build-lay-out-codesign
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Download payload
      uses: actions/download-artifact@v2
      with:
        name: macos-payload
        path: payload
    
    - name: Zip payload
      shell: pwsh
      run: |
        Compress-Archive -Path payload payload/payload.zip
        cd payload
        Get-ChildItem -Exclude payload.zip | Remove-Item -Recurse -Force
    
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Install ESRP client
      shell: pwsh
      env:
        AZ_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
      run: |
        az storage blob download --file esrp.zip --account-key "$env:AZ_KEY" --account-name gcmesrp --container microsoft-esrp-client --name microsoft.esrpclient.1.2.76.nupkg
        Expand-Archive -Path esrp.zip -DestinationPath .\esrp
    
    - name: Install certificates
      shell: pwsh
      env:
        AZ_VAULT: ${{ secrets.AZURE_VAULT }}
        AUTH_CERT: ${{ secrets.AZURE_VAULT_AUTH_CERT_NAME }}
        REQUEST_SIGNING_CERT: ${{ secrets.AZURE_VAULT_REQUEST_SIGNING_CERT_NAME }}
      run: |
        az keyvault secret download --vault-name "$env:AZ_VAULT" --name "$env:AUTH_CERT" --file out.pfx
        certutil -f -importpfx out.pfx
        Remove-Item out.pfx

        az keyvault secret download --vault-name "$env:AZ_VAULT" --name "$env:REQUEST_SIGNING_CERT" --file out.pfx
        certutil -f -importpfx out.pfx
        Remove-Item out.pfx
    
    - name: Run ESRP client
      shell: pwsh
      env:
        AZURE_AAD_ID: ${{ secrets.AZURE_AAD_ID }}
        # We temporarily need two AAD IDs, as we're using an SSL certificate associated
        # with an older App Registration until we have the required hardware to approve
        # the new certificate in SSL Admin.
        AZURE_AAD_ID_TEMP: ${{ secrets.AAD_ID_TEMP }}
        APPLE_KEY_CODE: ${{ secrets.APPLE_KEY_CODE }}
        APPLE_SIGNING_OP_CODE: ${{ secrets.APPLE_SIGNING_OPERATION_CODE }}
      run: |
        python .github\run_esrp_signing.py payload $env:APPLE_KEY_CODE $env:APPLE_SIGNING_OP_CODE --params 'Hardening' '--options=runtime'
    
    - name: Unzip payload
      shell: pwsh
      run: |
        Expand-Archive signed/payload.zip -DestinationPath signed
        Remove-Item signed/payload.zip

    - name: Upload signed payload
      uses: actions/upload-artifact@v2
      with:
        name: macos-signed-payload
        path: |
          signed